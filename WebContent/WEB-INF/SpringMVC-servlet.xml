<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!--需要扫描 Controller 包名 -->
	<context:component-scan base-package="com.ssthouse.officeautomation" />

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!--<property name="prefix" value="/WEB-INF/classes/resources/templates/"/> -->
		<!--<property name="suffix" value=".html"/> -->
	</bean>
	
	<!-- Process annotations on registered beans like @Autowired... -->
    <context:annotation-config/>

	<mvc:annotation-driven />

	<mvc:resources location="/" mapping="/resources/**" />
	
	<bean id="exceptionResolver" class="com.ssthouse.officeautomation.base.GlobalHandlerExceptionResolver"></bean>

	<!--配置springMVC拦截器, 多个拦截器,顺序执行 -->
	<!-- 无法解决 Interceptor加入后的跨域请求问题  暂时弃用 -->
	<!-- <mvc:interceptors>
		使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求
		<bean class=""></bean>
		<mvc:interceptor>
			匹配的是url路径， 如果不配置或/**,将拦截所有的Controller
			<mvc:mapping path="/user/**" />
			<bean class="com.ssthouse.officeautomation.base.interceptor.TokenInterceptor" />
		</mvc:interceptor>
		当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法
	</mvc:interceptors> -->
</beans>